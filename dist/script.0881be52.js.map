{"version":3,"sources":["script.js"],"names":["menuButton","document","querySelector","menu","addEventListener","getAttribute","setAttribute","e","target","contains","heightHeader","querySelectorAll","forEach","btn","preventDefault","targetId","targetElement","targetPosition","offsetTop","window","scrollTo","top","behavior","slider","indicators","slides","leftClick","rightClick","currentIndex","updateIndicators","indicator","index","showSlide","startX","isDragging","elem","touchStartX","length","translateX","offsetWidth","style","transform","concat","touches","clientX","diffX","diff"],"mappings":";AACA,IAAMA,EAAYC,SAASC,cAAc,gBACnCC,EAAOF,SAASC,cAAc,kBAEpCF,EAAWI,iBAAiB,QAAQ,WACA,SAA7BD,EAAKE,aAAa,SACjBF,EAAKG,aAAa,QAAS,eAE3BH,EAAKG,aAAa,QAAS,UAGnCL,SAASG,iBAAiB,QAAS,SAAAG,GAC/B,IAAMC,EAASD,EAAEC,OACbL,EAAKM,SAASD,IAAUR,EAAWS,SAASD,IAC5CL,EAAKG,aAAa,QAAS,UAOnC,IAAII,EAAe,GACnBT,SAASU,iBAAiB,gBAAgBC,QAAQ,SAAAC,GAC9CA,EAAIT,iBAAiB,QAAS,SAAUG,GACpCA,EAAEO,iBAEF,IAAIC,EAAW,KAAKV,aAAa,QAC7BW,EAAgBf,SAASC,cAAca,GAE3C,GAAGC,EAAc,CASb,IAAIC,EAAiBD,EAAcE,UAAWR,EAE9CS,OAAOC,SAAS,CACZC,IAAKJ,EACLK,SAAU,gBAU1B,IAAIC,EAAStB,SAASC,cAAc,kBAChCsB,EAAavB,SAASU,iBAAiB,6BACvCc,EAASxB,SAASU,iBAAiB,iBACnCe,EAAYzB,SAASU,iBAAiB,gBACtCgB,EAAa1B,SAASU,iBAAiB,iBACvCiB,EAAe,EAGnB,SAASC,IACLL,EAAWZ,QAAQ,SAACkB,EAAWC,GACvBA,IAAUH,EACVE,EAAUxB,aAAa,QAAS,mCAEhCwB,EAAUxB,aAAa,QAAS,8BAM5CkB,EAAWZ,QAAQ,SAACkB,EAAWC,GAC3BD,EAAU1B,iBAAiB,QAAS,WAChC4B,EAAUD,OAIlB,IAAIE,EAAS,EACTC,GAAa,EACjBR,EAAUd,QAAQ,SAACuB,GACfA,EAAK/B,iBAAiB,QAAS,WAC3B4B,EAAUJ,EAAa,OAG/BD,EAAWf,QAAQ,SAACuB,GAChBA,EAAK/B,iBAAiB,QAAQ,WAC1B4B,EAAUJ,EAAa,OAI/B,IAAIQ,EAAc,EAqDlB,SAASJ,EAAUD,GACXA,EAAQ,EACRA,EAAQ,EACDA,GAASN,EAAOY,SACvBN,EAAQ,GAGZ,IAAIO,GAAcP,GAASN,EAAO,GAAGc,YAAc,KACnDhB,EAAOiB,MAAMC,UAASC,cAAAA,OAAiBJ,EAAe,OACtDV,EAAeG,EACfF,IA7DJN,EAAOnB,iBAAiB,aAAc,SAACG,GACnC6B,EAAc7B,EAAEoC,QAAQ,GAAGC,QAC3BV,GAAa,IAEjBX,EAAOnB,iBAAiB,YAAa,SAACG,GAClC,GAAK2B,EAAL,CACA,IACIW,EADYtC,EAAEoC,QAAQ,GAAGC,QACLR,EAEpBS,EAAQ,GAERb,EAAUJ,EAAe,GAClBiB,GAAS,IAEhBb,EAAUJ,EAAe,GAG7BM,GAAa,KAEjBX,EAAOnB,iBAAiB,WAAY,WAChC8B,GAAa,IAGjBX,EAAOnB,iBAAiB,YAAa,SAACG,GAClC2B,GAAa,EACbD,EAAS1B,EAAEqC,UAGfrB,EAAOnB,iBAAiB,UAAW,WAC/B8B,GAAa,IAGjBX,EAAOnB,iBAAiB,aAAc,WAClC8B,GAAa,IAGjBX,EAAOnB,iBAAiB,YAAa,SAACG,GAClC,GAAK2B,EAAL,CACA,IACIY,EADWvC,EAAEqC,QACKX,EAElBa,EAAO,EAEPd,EAAUJ,EAAe,GAClBkB,EAAO,GAEdd,EAAUJ,EAAe,GAE7BM,GAAa,KAgBjBF,EAAUJ","file":"script.0881be52.js","sourceRoot":"..\\src","sourcesContent":["\r\nconst menuButton =document.querySelector(\".menu_button\");\r\nconst menu = document.querySelector(\"header div nav\");\r\n\r\nmenuButton.addEventListener(\"click\",()=>{\r\n    if(menu.getAttribute(\"class\")===\"menu\"){\r\n        menu.setAttribute(\"class\", \"menu_vision\")\r\n    }else{\r\n        menu.setAttribute(\"class\", \"menu\");\r\n    }\r\n})\r\ndocument.addEventListener(\"click\", e=>{\r\n    const target = e.target;\r\n    if(!menu.contains(target)&&!menuButton.contains(target)){\r\n        menu.setAttribute('class', \"menu\");\r\n    }\r\n})\r\n\r\n\r\n//scroll in section href\r\n\r\nlet heightHeader = 70;\r\ndocument.querySelectorAll('a[href^=\"#\"]').forEach(btn=>{//dlya kazdogo elementa a y kotorogo href na4inaetsya s #\r\n    btn.addEventListener('click', function (e) {//sozdaem sobitie pri klike\r\n        e.preventDefault();//prdotvrashyaem standartnyi perehod brayzera\r\n\r\n        let targetId = this.getAttribute('href');//ispolbzyem this 4tobi polichitb zna4enie href na kotoriy klikaem\r\n        let targetElement = document.querySelector(targetId);//ishem kazdiy element s danim id\r\n\r\n        if(targetElement){//esli takoy element estb to\r\n//let targetPosition =targetElement.getBoundingClientRect().top + window.scrollY - heightHeader;\r\n//getBoundingClientRect().top rastoyanie ot verhney granitsi vidimiy oblasti do verhney granici elementa\r\n//window.scrollY возвращает текущее количество пикселей, на которое страница была прокручена по вертикали от верхней границы документа.\r\n\r\n// targetPosition = (расстояние от верхней границы видимой области браузера до верхней границы элемента)\r\n// + (текущее количество пикселей вертикальной прокрутки страницы)\r\n// - (высота заголовка)\r\n//or\r\n            let targetPosition = targetElement.offsetTop -heightHeader;\r\n//offsetTop = rastoyanie ot verha elementa do na4ala html stranici \r\n            window.scrollTo({\r\n                top: targetPosition,\r\n                behavior: \"smooth\"\r\n            });\r\n//метод scrollTo у объекта window, чтобы выполнить плавную прокрутку до нужной позиции. behavior: 'smooth' делает прокрутку плавной.\r\n        }\r\n    });\r\n});\r\n\r\n\r\n///add slider\r\n\r\nlet slider = document.querySelector(\".swiper-slider\");\r\nlet indicators = document.querySelectorAll(\".swiper-indicator-element\");\r\nlet slides = document.querySelectorAll(\".swiper-slide\");\r\nlet leftClick = document.querySelectorAll(\".swiper-left\");\r\nlet rightClick = document.querySelectorAll(\".swiper-right\");\r\nlet currentIndex = 0;\r\n\r\n// Функция для обновления индикаторов\r\nfunction updateIndicators() {\r\n    indicators.forEach((indicator, index) => {\r\n        if (index === currentIndex) {\r\n            indicator.setAttribute(\"class\", \"swiper-indicator-element-active\");\r\n        } else {\r\n            indicator.setAttribute(\"class\", \"swiper-indicator-element\");\r\n        }\r\n    });\r\n}\r\n\r\n// Привязываем обработчики к индикаторам\r\nindicators.forEach((indicator, index) => {\r\n    indicator.addEventListener(\"click\", () => {\r\n        showSlide(index);\r\n    });\r\n});\r\n\r\nlet startX = 0;\r\nlet isDragging = false;\r\nleftClick.forEach((elem)=>{\r\n    elem.addEventListener(\"click\", ()=>{\r\n        showSlide(currentIndex-1);\r\n    });\r\n});\r\nrightClick.forEach((elem)=>{\r\n    elem.addEventListener(\"click\",()=>{\r\n        showSlide(currentIndex+1);\r\n    });\r\n});\r\n//sensor move\r\nlet touchStartX = 0;\r\n\r\nslider.addEventListener(\"touchstart\", (e) => {\r\n    touchStartX = e.touches[0].clientX;\r\n    isDragging = true;\r\n});\r\nslider.addEventListener(\"touchmove\", (e) => {\r\n    if (!isDragging) return;\r\n    let touchEndX = e.touches[0].clientX;\r\n    let diffX = touchEndX - touchStartX;\r\n\r\n    if (diffX > 30) {\r\n        // Свайп вправо\r\n        showSlide(currentIndex - 1);\r\n    } else if (diffX < -30) {\r\n        // Свайп влево\r\n        showSlide(currentIndex + 1);\r\n    }\r\n\r\n    isDragging = false;\r\n});\r\nslider.addEventListener(\"touchend\", () => {\r\n    isDragging = false;\r\n});\r\n// Обработчики перемещения слайдов с помощью мыши\r\nslider.addEventListener(\"mousedown\", (e) => {\r\n    isDragging = true;\r\n    startX = e.clientX;\r\n});\r\n\r\nslider.addEventListener(\"mouseup\", () => {\r\n    isDragging = false;\r\n});\r\n\r\nslider.addEventListener(\"mouseleave\", () => {\r\n    isDragging = false;\r\n});\r\n\r\nslider.addEventListener(\"mousemove\", (e) => {\r\n    if (!isDragging) return;\r\n    let currentX = e.clientX;\r\n    let diff = currentX - startX;\r\n\r\n    if (diff > 0) {\r\n        // Двигаем вправо\r\n        showSlide(currentIndex - 1);\r\n    } else if (diff < 0) {\r\n        // Двигаем влево\r\n        showSlide(currentIndex + 1);\r\n    }\r\n    isDragging = false;\r\n});\r\n\r\nfunction showSlide(index) {\r\n    if (index < 0) {\r\n        index = 0;\r\n    } else if (index >= slides.length) {\r\n        index = 0;\r\n    } \r\n    \r\n    let translateX = -index * (slides[0].offsetWidth + 150); // slides[0].offsetWidth =  ширина слайда\r\n    slider.style.transform = `translateX(${translateX}px)`;\r\n    currentIndex = index;\r\n    updateIndicators();\r\n}\r\n\r\nshowSlide(currentIndex);\r\n\r\n\r\n\r\n\r\n"]}